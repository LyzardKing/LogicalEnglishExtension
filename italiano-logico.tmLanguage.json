{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Italiano Logico",
  "patterns": [
    {
      "include": "#keywords"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#comments"
    },
    {
      "include": "#type-checking-enabled-comment"
    },
    {
      "include": "#multiline-comments"
    },
    {
      "include": "#type-hierarchy-headers"
    },
    {
      "include": "#template-headers"
    },
    {
      "include": "#language-headers"
    },
    {
      "include": "#knowledge-base-headers"
    },
    {
      "include": "#scenario-headers"
    },
    {
      "include": "#query-headers"
    },
    {
      "include": "#template-types"
    },
    {
      "include": "#predefined-constants"
    }
  ],
  "repository": {
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.logical-english",
          "match": "(\\brisulta che\\b|\\bnon risulta che\\b|^\\s*se\\b|\\bse\\s*$|^\\s*e\\b|\\be\\s*$|^\\s*o\\b|\\bo\\s*$|^\\s*perché\\b|\\perché\\s*$|\\s+che\\s+)"
        }
      ]
    },
    "comments": {
      "match": "(%)(.*)",
      "name": "comment.line.help.logical-english",
      "captures": {
        "1": {
          "name": "punctuation.definition.comment.logical-english"
        }
      }
    },
    "type-hierarchy-headers": {
      "match": "^(\\s*)(l'ontologia è is)(:)(\\s*)$",
      "name": "entity.type-hierarchy.logical-english",
      "captures": {
        "2": {
          "name": "storage.type.type-hierarchy.logical-english"
        },
        "3": {
          "name": "punctuation.section.type-hierarchy.begin.logical-english"
        }
      }
    },
    "template-headers": {
      "match": "^(\\s*)(i modelli sono)(:)(\\s*)$",
      "name": "entity.template.logical-english",
      "captures": {
        "2": {
          "name": "storage.type.template.logical-english"
        },
        "3": {
          "name": "punctuation.section.template.begin.logical-english"
        }
      }
    },
    "language-headers": {
      "match": "^(\\s*)(il linguaggio destinazione è)(:)([\\w|\\s]+)\\.(\\s*)$",
      "name": "entity.language.logical-english",
      "captures": {
        "2": {
          "name": "storage.type.language.logical-english"
        },
        "4": {
          "name": "variable.other.language.logical-english"
        }
      }
    },
    "knowledge-base-headers": {
      "match": "^(\\s*)(la base di conoscenza) ([\\w|\\s]*)(include)(:\\s*$)",
      "name": "entity.knowledge-base.logical-english",
      "captures": {
        "2": {
          "name": "storage.type.knowledge-base.logical-english"
        },
        "3": {
          "name": "variable.other.knowledge-base-name.logical-english"
        },
        "4": {
          "name": "storage.type.knowledge-base.logical-english"
        }
      }
    },
    "scenario-headers": {
      "match": "^(\\s*)(scenario) ([\\w|\\s]+) (è)(:\\s*$)",
      "name": "entity.scenario.logical-english",
      "captures": {
        "2": {
          "name": "storage.type.scenario.logical-english"
        },
        "3": {
          "name": "variable.other.scenario-name.logical-english"
        },
        "4": {
          "name": "storage.type.scenario.logical-english"
        }
      }
    },
    "query-headers": {
      "match": "^(\\s*)(domanda) ([\\w|\\s]+) (è)(:\\s*$)",
      "name": "entity.query.logical-english",
      "captures": {
        "2": {
          "name": "storage.type.query.logical-english"
        },
        "3": {
          "name": "variable.other.query-name.logical-english"
        },
        "4": {
          "name": "storage.type.query.logical-english"
        }
      }
    },
    "template-types": {
      "match": "(\\*)(\\s*un[oa]? \\w[\\s\\w]*)(\\*)",
      "name": "entity.type.template.logical-english",
      "captures": {
        "1": {
          "name": "punctuation.definition.type.begin.logical-english"
        },
        "2": {
          "name": "entity.name.type.template-type.logical-english"
        },
        "3": {
          "name": "punctuation.definition.type.end.logical-english"
        }
      }
    },
    "predefined-constants": {
      "match": "\\b(sconosciut.)\\b",
      "name": "variable.special.predefined.logical-english"
    }
  },
  "scopeName": "source.logical-english.italiano"
}
